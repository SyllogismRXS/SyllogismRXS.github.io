<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="https://kevindemarco.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kevindemarco.com/" rel="alternate" type="text/html" /><updated>2021-01-28T23:02:20-05:00</updated><id>https://kevindemarco.com/feed.xml</id><title type="html">Kevin DeMarco</title><subtitle>I write about robotics, technology, music, woodworking, and bicycling.</subtitle><author><name>Kevin DeMarco</name></author><entry><title type="html">Bamboomba: The sort of wooden robot.</title><link href="https://kevindemarco.com/robotics/ros/woodworking/2021/01/19/bamboomba-part-1.html" rel="alternate" type="text/html" title="Bamboomba: The sort of wooden robot." /><published>2021-01-19T11:00:00-05:00</published><updated>2021-01-19T11:00:00-05:00</updated><id>https://kevindemarco.com/robotics/ros/woodworking/2021/01/19/bamboomba-part-1</id><content type="html" xml:base="https://kevindemarco.com/robotics/ros/woodworking/2021/01/19/bamboomba-part-1.html">&lt;p&gt;What do you get when you cross a Roomba…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/apart_roomba.jpg&quot; alt=&quot;Apart Roomba&quot; /&gt;&lt;/p&gt;

&lt;p&gt;with scrap wood?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/scroll-saw-wood.jpg&quot; alt=&quot;Wood with scroll saw&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You get… Bamboomba!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/bamboomba.jpg&quot; alt=&quot;Bamboomba&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You might be wondering why Kevin, being the professional researcher who he is,
decided to build a half-wooden monstrosity with an obsolete robot base.  Didn’t
Kevin go to college for thirteen years or something? Why don’t you just &lt;em&gt;buy&lt;/em&gt; a
robot, Kevin? How is this robot going to help you pay your mortgage? Kevin.&lt;/p&gt;

&lt;p&gt;Jeeeeeez, stop hassling me. I built Bamboomba to show what is possible with a
couple of low-cost sensors and to learn about the new features in the &lt;a href=&quot;https://index.ros.org/doc/ros2/&quot;&gt;Robot
Operating System (ROS) 2&lt;/a&gt;
&lt;a href=&quot;https://navigation.ros.org/&quot;&gt;Navigation2&lt;/a&gt; software stack. Also, I think it’s a
really funny name.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/ruler.jpg&quot; alt=&quot;Ruler&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To be completely honest, when my friend and I co-founded &lt;a href=&quot;https://www.rifrobotics.com&quot;&gt;RIF
Robotics&lt;/a&gt; in the fall of 2020, we submitted an
application to Clearpath Robotics’
&lt;a href=&quot;https://clearpathrobotics.com/blog/2020/11/winners-of-the-2020-partnerbot-grant-program-announced-putting-robotic-platforms-in-researchers-hands/&quot;&gt;PartnerBot&lt;/a&gt;
program and we won! That means we will be receiving an industrial-grade indoor
ground robot in February 2021 named
&lt;a href=&quot;https://clearpathrobotics.com/dingo-indoor-mobile-robot/&quot;&gt;Dingo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/dingo.png&quot; alt=&quot;Bamboomba&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We will be using the ROS2 and Navigation2 software stacks to control Dingo and
build maps of the environment with a LIDAR, but I wanted to get a head start on
the software development, so I built Bamboomba as a surrogate platform. Both
Bamboomba and Dingo will have the same sensor suite and software stack, so
moving between the two platforms should be fairly seamless. I did go to college
for like thirteen years, right? The sensor suite consists of an &lt;a href=&quot;https://www.intelrealsense.com/depth-camera-d435/&quot;&gt;Intel
RealSense D435i&lt;/a&gt; and an &lt;a href=&quot;https://www.slamtec.com/en/Lidar/A2&quot;&gt;RP
LIDAR A2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/sensor-suite.jpg&quot; alt=&quot;Sensors&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The D435i provides an inertial measurement unit (i.e., measurements of linear
and rotational accelerations), a 2D RGB image, and a 3D point cloud of the
environment. The RP LIDAR uses a rotating laser to measure distances to objects
around the robot in 360°. There will be more on these sensors and how
they help the robot to build maps and navigate around obstacles in a future
post. The important part to note at this moment is that I hand cut and drilled
the mounts for these professional sensors without using any CAD software or 3D
printers. One of my industrial design friends said that he calls anything not
cut by a &lt;a href=&quot;https://en.wikipedia.org/wiki/Numerical_control&quot;&gt;CNC&lt;/a&gt; machine
“folksy.”  Like folk music. Not written down. I prefer the term, “Artisinal
Robotics.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/artisinal-robotics.gif&quot; alt=&quot;Artisinal Robotics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That GIF isn’t from a random woodworking project. I was fine-tuning the
mounting block for the LIDAR on the shooting board that I made with a chisel
and hand router.&lt;/p&gt;

&lt;p&gt;Bamboomba is loosely based on the
&lt;a href=&quot;https://www.turtlebot.com/turtlebot2/&quot;&gt;Turtlebot&lt;/a&gt; design, which has been used
extensively in the open source and academic robotics communities.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/turtlebot.png&quot; alt=&quot;Turtlebot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But Bamboomba is a lot cheaper, only took one day to build from scratch, and,
literally, can’t be faithfully reproduced! The main idea I took from the
Turtlebot was the multiple levels offset by aluminum stand-offs. This sparse
design allows a roboticist to attach random sensors to the platforms and a
closed laptop (the robot “brains”) can fit on one of the platforms. I was able
to cut the platforms out of spare plywood using my scroll saw. I didn’t want to
order aluminum stand-offs from an expensive mechanical parts store and, more
importantly, wait two weeks for the parts to arrive, so I drove five minutes to
Lowe’s and stared at the mechanical fasteners section for an hour until I came
up with the following design for the stand-offs:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/standoffs.jpg&quot; alt=&quot;Stand offs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The aluminum rod cost $10 and I was able to cut it precisely with a pipe cutter:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/cutting.jpg&quot; alt=&quot;Cutting&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the aluminum rod stand-offs were cut to size, it was fairly easy to
assemble the platforms. The most tedious part was determining where to drill
the holes for the screws to pass through without a template. This involved
drawing intersecting lines to find the midpoint between mounting screw
locations and transferring hole points by laying the wooden platforms directly
on top of each other. If you look closely, you can see my layout lines.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/platforms.jpg&quot; alt=&quot;Standoffs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When designing a ground robot with a single planar LIDAR, one of the most
difficult design decisions is where to place the LIDAR. If the LIDAR is mounted
at a low-point on the robot, it will ensure that the LIDAR doesn’t miss any
obstacles close to the ground. However, if the LIDAR is close to the ground,
the laser will most likely be obstructed by other mechanical structures on the
robot. This is opposed to mounting the LIDAR on top of the robot, where it can
have an unobstructed 360° view of its surroundings. However, the LIDAR will
not be able to see objects that are below its line-of-sight, which could result
in collisions with low-lying obstacles! Of course, you could use multiple
LIDARs to cover the blind spots, but that costs more money and Bamboomba is not
that kind of robot. I drilled mounting holes for the LIDAR in both the bottom
and the top platforms, so that I could experiment with mounting the LIDAR at
two different heights. When the LIDAR is in the bottom configuration, I route
the LIDAR and serial cables behind the aluminum stand-off to reduce the
obstructions in the LIDAR’s field-of-view. The cables are beautifully secured
in place with zip ties.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/lidar-bottom.jpg&quot; alt=&quot;LIDAR Bottom&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When the LIDAR is mounted in the top configuration, it has to be raised
slightly to ensure that its laser is not obstructed by the RealSense
camera. This is done with the 3/4” piece of wood that played the starring role
in the previous animated GIF.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/angle-view.jpg&quot; alt=&quot;Angle View&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, the laptop is mounted to Bamboomba with velcro to make it easy to remove.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/front-view.jpg&quot; alt=&quot;Front View&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I hope this article will inspire others to hack their own Roombas into wooden
abominations. There are &lt;a href=&quot;https://github.com/tork-a/roomblock&quot;&gt;other&lt;/a&gt; ways to
&lt;a href=&quot;https://www.turtlebot.com/build/&quot;&gt;build&lt;/a&gt; or
&lt;a href=&quot;https://dabit.industries/products/turtlebot-2&quot;&gt;buy&lt;/a&gt; a similar robot, but I
like mine best. Bamboomba’s platform is made from readily accessible parts that
can be put together in a day with some basic cutting tools.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-19-bamboomba-part-1/parts-on-bench.jpg&quot; alt=&quot;Parts&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve got to come clean about something that has really been bothering me. The
robot’s base is not really a Roomba. It’s an &lt;a href=&quot;https://en.wikipedia.org/wiki/IRobot_Create&quot;&gt;iRobot
Create&lt;/a&gt;. But the bamboo + Roomba
name was &lt;em&gt;soooo&lt;/em&gt; good and it’s basically the Roomba without the vacuum. My
roommate from college gifted me the Create back in 2008 for being in his
wedding when I had not even considered studying robotics in graduate school. He
knew what I wanted.&lt;/p&gt;

&lt;p&gt;In a future post, I will describe how the ROS2 and Navigation2 software stacks
are used to build maps and navigate around obstacles in
the environment with the LIDAR.&lt;/p&gt;

&lt;p&gt;Thanks for following along.&lt;/p&gt;</content><author><name>Kevin DeMarco</name></author><category term="robotics" /><category term="ROS" /><category term="woodworking" /><summary type="html">What do you get when you cross a Roomba…</summary></entry><entry><title type="html">A Handcrafted Dovetail Box</title><link href="https://kevindemarco.com/woodworking/handtools/box/2021/01/15/dovetail-box.html" rel="alternate" type="text/html" title="A Handcrafted Dovetail Box" /><published>2021-01-15T09:45:00-05:00</published><updated>2021-01-15T09:45:00-05:00</updated><id>https://kevindemarco.com/woodworking/handtools/box/2021/01/15/dovetail-box</id><content type="html" xml:base="https://kevindemarco.com/woodworking/handtools/box/2021/01/15/dovetail-box.html">&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-15-dovetail-box/DSC_0520.JPG&quot; alt=&quot;Dovetail box front&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My educational background is in Electrical and Computer Engineering with a
strong bent towards Computer Science. This means that I spend most of my day
typing on a computer, reading technical papers, designing systems, writing
code, and communicating with team members. Even when I am designing mechanical
systems for the real world or using CAD programs to 3D print objects, almost
all the work is done on a computer. That’s why I prioritize woodworking. I
believe, that as humans, we need short-term, tangible (i.e., physical) outcomes
to keep us from obsessing over potentially non-real things. Woodworking
provides the physical connection to the world that so many computer-addicted
folks desire. I can’t tell you how many times I’ve come across a programmer’s
blog who also listed “woodworking” as one of their hobbies. I should probably
start a Meetup.com group for these people (myself included). Throw in
“bicycling” and my target support group is pretty well defined.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2021-01-15-dovetail-box/venn-diagram.png&quot; alt=&quot;One of us. One of us.&quot; /&gt;&lt;figcaption&gt;
      One of us. One of us.

    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Now that I have sufficiently pigeonholed myself, I can describe the dovetail
box. I built this dovetail box as a Christmas present for my father. With the
2020 pandemic in full-force, which made visiting family members irresponsible,
I decided that a hand-made gift was better than feeding the online e-commerce
beast. After I bought the lumber from a store, I built it completely with hand
tools, no electricity required.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/2021-01-15-dovetail-box/handtools.jpg&quot; alt=&quot;Hand tools&quot; /&gt;&lt;figcaption&gt;
      Saws, blades, steel, and blood (my own).

    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;The box is made from 3/4 inch poplar that I purchased from a local hardware
store. Poplar is a nice wood for beginner hand tool woodworkers. It is
considered a “hard” wood, which means it is less likely to splinter and shatter
like pine, but it won’t dull the edges of your blades as quickly as other hard
woods, such as red oak. Also, poplar is widely available in the big box stores
at a reasonable price. Since my 7th grade wood shop class didn’t teach us how
to use traditional hand tools, I learned from the masters on YouTube. When
possible, I subscribe to the &lt;a href=&quot;https://www.youtube.com/user/PaulSellersWoodwork&quot;&gt;Paul
Sellers&lt;/a&gt; school of thought
when working wood. Many of the techniques that I used to build this dovetail
box were from his video on the &lt;a href=&quot;https://youtu.be/SibYJ8JtOo4&quot;&gt;same
subject&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-15-dovetail-box/DSC_0531.JPG&quot; alt=&quot;Side detail 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What is both appealing and intimidating about Paul Seller’s approach to
woodworking is that it requires practice, artistry, and learned skills. Anyone
can read learn how to make straight cuts on a table saw in a matter of minutes,
but learning how to set and use a plane to flatten a piece of wood could take
months or years. For Paul Sellers, the woodworker’s skill with the saw or plane
can overcome any imperfections in the wood or tool - “A Good Craftsman Never
Blames His Tools” (of course this statement has multiple
&lt;a href=&quot;http://www.javiercasas.com/articles/good-craftsman-never-blames-tools/&quot;&gt;interpretations&lt;/a&gt;). From
my perspective, woodworking is a hobby that I use to escape from the technical
perfection that is required in my daily profession. I enjoyed rounding over the
edges of this box with a hand plane, which felt like free-hand sculpting.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-15-dovetail-box/DSC_0524.JPG&quot; alt=&quot;Side detail 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have also borrowed techniques from &lt;a href=&quot;https://www.youtube.com/watch?v=ibyTMTLjaq8&amp;amp;t=122s&quot;&gt;David
Barron&lt;/a&gt;. I prefer his
technique of using a fine-toothed &lt;a href=&quot;https://www.highlandwoodworking.com/knew-concepts-5in-woodworkers-fretsaw.aspx&quot;&gt;coping
saw&lt;/a&gt;
to cut the waste from dovetails instead of “chopping” them with a chisel, which
Paul Sellers prefers. Still, I often use Paul Sellers’ technique for setting
and installing hinges for box lids and doors. The accuracy on these recessed
hinges, without using a measuring device or jig, is quite satisfying.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-15-dovetail-box/DSC_0522.JPG&quot; alt=&quot;Box hinges&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Poplar isn’t known for having nicely “figured” wood. However, I was able to
identify an interesting feature on this poplar and I used it on the lid of the
box.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2021-01-15-dovetail-box/DSC_0526.JPG&quot; alt=&quot;Top detail&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To finish the box, I used a single coat of &lt;a href=&quot;https://www.lowes.com/pd/Minwax-Wood-Finish-Satin-Colonial-Maple-Oil-based-Interior-Stain-Actual-Net-Contents-8-fl-oz/999914527&quot;&gt;colonial maple
stain&lt;/a&gt;
and two coats of &lt;a href=&quot;https://www.lowes.com/pd/WATCO-Brown-Danish-Oil-Actual-Net-Contents-16-fl-oz/3142391?cm_mmc=shp-_-c-_-prd-_-pnt-_-google-_-lia-_-219-_-interiorstains-_-3142391-_-0&amp;amp;placeholder=null&amp;amp;ds_rl=1286981&amp;amp;gclid=CjwKCAiAl4WABhAJEiwATUnEF7em7_JC6P0BLgOs2R5DDnbi1EAVwbkwTVPzFNpFH6uf2b3KiRXH0hoCgR8QAvD_BwE&amp;amp;gclsrc=aw.ds&quot;&gt;danish
oil&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When the lock down of 2020 began, I made myself a commitment to improve my hand
tool working skills. Getting better at using hand tools is very similar to
getting better at playing a musical instrument (c.f. &lt;a href=&quot;https://www.goodreads.com/book/show/18886619-the-foundations-of-better-woodworking&quot;&gt;Jeff
Miller&lt;/a&gt;]). Both
activities require constant regular practice and assessment. Excuse me while I
go make 365 dovetail boxes.&lt;/p&gt;</content><author><name>Kevin DeMarco</name></author><category term="woodworking" /><category term="handtools" /><category term="box" /><summary type="html"></summary></entry><entry><title type="html">Remote Pair Programming via SSH and wemux on Linux</title><link href="https://kevindemarco.com/ssh/programming/ngrok/tmux/wemux/terminal/2020/03/25/pair-programming.html" rel="alternate" type="text/html" title="Remote Pair Programming via SSH and wemux on Linux" /><published>2020-03-25T23:11:13-04:00</published><updated>2020-03-25T23:11:13-04:00</updated><id>https://kevindemarco.com/ssh/programming/ngrok/tmux/wemux/terminal/2020/03/25/pair-programming</id><content type="html" xml:base="https://kevindemarco.com/ssh/programming/ngrok/tmux/wemux/terminal/2020/03/25/pair-programming.html">&lt;p&gt;There are several benefits to the use of pair programming in the software
development process: fewer mistakes, better understanding of the codebase
across multiple developers, and improved team cohesiveness (cf. &lt;a href=&quot;https://www.verypossible.com/blog/pros-and-cons-of-pair-programming&quot;&gt;The Pros and
Cons of Pair Programming&lt;/a&gt;). Personally,
I have found pair programming can be especially useful for
training. Experienced developers forget the multitude of tiny stumbling blocks
that less experienced developers encounter on a daily basis. Also, it can be
helpful for less experienced developers to see how experienced developers have
customized their tools for increased productivity (e.g., terminal setup, emacs
config, vim config, etc.)&lt;/p&gt;

&lt;p&gt;However, when working remotely, pair programming can be difficult without a
simple and secure process. In this post, I describe the steps required to setup
a secure pair programming process in which one (remote) developer SSH’s into
another (host) developer’s Linux machine. The host developer will be able to
specify which remote developers have access and also see the command line
keyboard entries made by the remote developer. We will also configure the host
machine such that the remote user will not be able to SSH into the host machine
unless the host developer runs a specific terminal sharing program (i.e.,
wemux). While this setup is fairly secure, you shouldn’t grant access to remote
developers that you don’t trust.&lt;/p&gt;

&lt;h2 id=&quot;system-overview&quot;&gt;System Overview&lt;/h2&gt;

&lt;p&gt;A high-level diagram of the setup is shown in the following figure.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kevindemarco.com/assets/images/2020-03-25-pair-programming/pair-ssh-diagram.jpg&quot; alt=&quot;Pair SSH Diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As shown in the diagram, the pair programming server is initiated by the host
developer running the &lt;code class=&quot;highlighter-rouge&quot;&gt;wemux&lt;/code&gt; command. The remote developer then uses SSH to
log into the &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt; Linux user on the host machine. The pair user’s
&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.profile&lt;/code&gt; file is configured to run the command, &lt;code class=&quot;highlighter-rouge&quot;&gt;wemux pair; exit&lt;/code&gt;, which
forces the remote user to immediately join the wemux session upon login and
exit the SSH session when the wemux session ends. Finally, to make it easier to
SSH into computers that are behind firewalls, proxies, and VPN servers, the
host machine will use &lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt; to provide an SSH tunnel (cf. &lt;a href=&quot;https://ngrok.com/&quot;&gt;ngrok&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;one-time-host-linux-machine-configuration&quot;&gt;One-Time Host Linux Machine Configuration&lt;/h2&gt;

&lt;h3 id=&quot;install-package-dependencies&quot;&gt;Install Package Dependencies&lt;/h3&gt;

&lt;p&gt;Install the SSH server, tmux, and the snap package manager with your system’s
package manager:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;openssh-server tmux snapd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;install-the-ngrok-snap-package&quot;&gt;Install the ngrok snap package&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://ngrok.com/&quot;&gt;ngrok&lt;/a&gt; will be used to create an SSH tunnel to the host machine that
can be securely accessed behind firewalls and VPN servers.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;snap &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ngrok&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;configure-ngrok&quot;&gt;Configure ngrok&lt;/h4&gt;

&lt;p&gt;Create an ngrok account:
&lt;a href=&quot;https://dashboard.ngrok.com/login&quot;&gt;https://dashboard.ngrok.com/login&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After creating your ngrok account, you will need to use the tunnel
authorization token in your ngrok account to authorize your machine. Copy the
authorization token from the website,
&lt;a href=&quot;https://dashboard.ngrok.com/auth&quot;&gt;https://dashboard.ngrok.com/auth&lt;/a&gt;, and run
the following command, where &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;authorization-token&amp;gt;&lt;/code&gt; is the copied token:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ngrok authtoken &amp;lt;authorization-token&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;install-and-configure-wemux&quot;&gt;Install and Configure wemux&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zolrath/wemux&quot;&gt;wemux&lt;/a&gt; is a project that allows multiple
developers to directly collaborate on the same command line. (wemux leverages
&lt;a href=&quot;https://github.com/tmux/tmux&quot;&gt;tmux&lt;/a&gt;.) First, clone the wemux project to a
local directory. Typically, I keep 3rd-party repositories in a separate
directory:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ~/repos/3rd-party
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/repos/3rd-party
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/zolrath/wemux.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, configure wemux to only allow the host user to start a wemux session:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;wemux
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;host_list=(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ./wemux.conf.example&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Symbolically link the &lt;code class=&quot;highlighter-rouge&quot;&gt;wemux&lt;/code&gt; executable to a directory that is on the system
&lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH&lt;/code&gt; and link the configuration file to the default location (you will need
to run the following commands with &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;/wemux /usr/local/bin/wemux &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;sudo ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;/wemux.conf.example /usr/local/etc/wemux.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;create-a-new-linux-user&quot;&gt;Create a new Linux User&lt;/h3&gt;

&lt;p&gt;We will create a new Linux user, called &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt;, that will only be used by
remote pair programming users. You can accept the default values when running
the &lt;code class=&quot;highlighter-rouge&quot;&gt;adduser&lt;/code&gt; command, but make sure you specify a non-trivial password for the
new user.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;adduser pair&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now that the user has been created, let’s modify the user’s &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.profile&lt;/code&gt; file
such that when the remote user logs in, they are immediately dropped into the
currently running &lt;code class=&quot;highlighter-rouge&quot;&gt;wemux&lt;/code&gt; session.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;printf &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;wemux pair&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;gt;&amp;gt; /home/pair/.profile&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If the remote user tries to log into the &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt; user and the host isn’t running
&lt;code class=&quot;highlighter-rouge&quot;&gt;wemux&lt;/code&gt;, then the user’s SSH session is immediately terminated. Through this
mechanism, the host developer specifies when the remote user can access the
&lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt; user. Also, the &lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt; command terminates the &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt; user’s session
when the &lt;code class=&quot;highlighter-rouge&quot;&gt;wemux&lt;/code&gt; session ends.&lt;/p&gt;

&lt;p&gt;To hold the public keys from remote developers, let’s create the
&lt;code class=&quot;highlighter-rouge&quot;&gt;authorized_keys&lt;/code&gt; file for the &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt; user:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mkdir -p /home/pair/.ssh &amp;amp;&amp;amp; touch /home/pair/.ssh/authorized_keys&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For additional security, let’s configure the SSH server such that the &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt;
user can’t login with a password and then we’ll restart the SSH server:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;printf &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Match User pair&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;    PasswordAuthentication no&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;gt;&amp;gt; /etc/ssh/sshd_config&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service ssh restart&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;host-machine-session-initiation&quot;&gt;Host Machine Session Initiation&lt;/h2&gt;

&lt;p&gt;The following are the typical steps required when initiating a new pair
programming session.&lt;/p&gt;

&lt;h3 id=&quot;enable-ssh-login-via-publicprivate-key-authentication&quot;&gt;Enable SSH Login via Public/Private Key Authentication&lt;/h3&gt;

&lt;p&gt;The remote user will log into the &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt; user, but we don’t want the remote
user to have to know the password for the &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt; user, so we will use
public/private key authentication for SSH login. The remote user needs to send
their public key (typically located at &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.ssh/id_rsa.pub&lt;/code&gt;) to the host
developer. If the remote developer hasn’t generated SSH keys yet, the remote
user should generate SSH keys with the following command (substituting a valid
e-mail address):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; 4096 &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;your_email@example.com&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa.pub&lt;/code&gt; file can be transferred to the host developer via e-mail,
chat, etc. Upon reception of &lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa.pub&lt;/code&gt;, the host developer can add the
public key to the &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt; user’s &lt;code class=&quot;highlighter-rouge&quot;&gt;authorized_keys&lt;/code&gt; file to enable password-less
SSH login:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cat id_rsa.pub &amp;gt;&amp;gt; /home/pair/.ssh/authorized_keys&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;expose-ssh-port-via-ngrok&quot;&gt;Expose SSH Port via ngrok&lt;/h3&gt;

&lt;p&gt;The host developer will now use the &lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt; command to expose port 22 of the
SSH server:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ngrok tcp 22&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The ngrok connection information will be printed to the screen. Note the
information in the “Forwarding” section as this will be sent to the remote
developer to access the host’s SSH server. For example, if the “Forwarding”
section contained the following information:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Forwarding                    tcp://0.tcp.ngrok.io:14242 -&amp;gt; localhost:22&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The remote user would use the following SSH command to log into the host’s
machine (the &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; flag specifies the SSH port):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 14242 pair@0.tcp.ngrok.io&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;start-wemux-host-session&quot;&gt;Start wemux Host Session&lt;/h3&gt;

&lt;p&gt;The remote developer will not be able to log into the &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt; user until the
host developer starts the wemux session in a separate terminal:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wemux&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At this point, the remote developer can run the previously shown SSH
command. When, the host exits the wemux session, both users will be removed
from the session and the remote user will be logged off.&lt;/p&gt;

&lt;h2 id=&quot;configuration-options&quot;&gt;Configuration Options&lt;/h2&gt;

&lt;h3 id=&quot;wemux-options&quot;&gt;wemux options&lt;/h3&gt;

&lt;p&gt;If you don’t want the remote user to be able to enter commands, you can force
the remote user into the “mirror” mode by changing &lt;code class=&quot;highlighter-rouge&quot;&gt;wemux pair&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;wemux
mirror&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.profile&lt;/code&gt; file.&lt;/p&gt;

&lt;h2 id=&quot;other-notes&quot;&gt;Other Notes&lt;/h2&gt;

&lt;p&gt;After you modify the &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt; user’s &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.profile&lt;/code&gt; file, you won’t be able to
easily log into &lt;code class=&quot;highlighter-rouge&quot;&gt;pair&lt;/code&gt; user with the normal &lt;code class=&quot;highlighter-rouge&quot;&gt;su pair&lt;/code&gt; command without having to
start the wemux server. Instead, you can just directly modify the user’s
configuration files by prefixing your editor call with &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /home/pair/.profile&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;The following blog posts were used to put together this post:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://brianschiller.com/blog/2014/07/18/pair-programming-wemux&quot;&gt;Pair Programming with wemux and ngrok&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://martinbrochhaus.com/pair.html&quot;&gt;Pair Programming With Tmux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hamvocke.com/blog/remote-pair-programming-with-tmux/&quot;&gt;Remote Pair Programming Made Easy with SSH and tmux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ryanlue.com/posts/2018-01-13-pair-programming-over-ssh&quot;&gt;ssh + tmux = Pair Programming for Command Line Junkies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Kevin DeMarco</name></author><category term="ssh" /><category term="programming" /><category term="ngrok" /><category term="tmux" /><category term="wemux" /><category term="terminal" /><summary type="html">There are several benefits to the use of pair programming in the software development process: fewer mistakes, better understanding of the codebase across multiple developers, and improved team cohesiveness (cf. The Pros and Cons of Pair Programming). Personally, I have found pair programming can be especially useful for training. Experienced developers forget the multitude of tiny stumbling blocks that less experienced developers encounter on a daily basis. Also, it can be helpful for less experienced developers to see how experienced developers have customized their tools for increased productivity (e.g., terminal setup, emacs config, vim config, etc.)</summary></entry></feed>